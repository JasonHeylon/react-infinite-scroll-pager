{"version":3,"sources":["../../src/index.tsx","App.js","index.js"],"names":["InfiniteScrollPager","wrapperRef","React","handleScroll","props","isLoading","totalPage","page","wrapper","wrapperRect","window","componentDidMount","document","this","componentWillUnmount","loadNextPage","onPageChange","render","children","loader","noMoreTip","ref","Article","article","id","title","create_at","createdAt","style","padding","borderBottom","Date","toLocaleString","App","Component","constructor","super","handlePageChange","bind","state","articles","fetchData","setState","fetch","getUrl","then","res","json","data","fetchArticles","textAlign","map","key","ReactDOM","getElementById"],"mappings":"iNAEA,I,EAYqBA,Y,QAArB,a,8CACUC,WAAaC,sBAUrB,EAAAC,aAAe,W,MAC0B,EAAKC,MAApCC,cAAWC,cAAWC,SACxBC,EAAU,aAAhB,SAEKA,GAAWH,GAAaC,GAA7B,GAEoBE,EAApB,wBACIC,OAAqBC,mBA9B7B,GA+BM,kB,oHAhBJC,6BACEC,mCAAoCC,KAApCD,e,EAGFE,gCACEF,sCAAuCC,KAAvCD,e,EAeFG,wB,MACiCF,KAAKT,MAA5BG,UAERS,EAFcA,gBAEDT,EAAbS,I,EAGFC,kB,MAQMJ,KAAKT,MANPc,aACAb,cACAc,WACAb,cACAC,SACAa,cAGF,OACE,+BAAKC,IAAKR,KAAKZ,YAAf,EAEGI,GAFH,EAGGC,MAJL,I,EAvCiBN,CAA4BE,aCVjD,MAQMoB,EAAU,EAAGC,SAAWC,KAAIC,QAAOC,UAAWC,MAEhD,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,aAAc,mBAC3C,4BAAKL,GACL,iCAAU,IAAIM,KAAKJ,GAAWK,mBAKpC,MAAMC,UAAY/B,IAAMgC,UACtBC,YAAY/B,GACVgC,MAAMhC,GAENS,KAAKwB,iBAAmBxB,KAAKwB,iBAAiBC,KAAKzB,MAEnDA,KAAK0B,MAAQ,CACXhC,KAAM,EACNF,WAAW,EACXmC,SAAU,IAId7B,oBAAqB,MACXJ,EAASM,KAAK0B,MAAdhC,KACRM,KAAK4B,UAAUlC,GAGjBkC,UAAUlC,GACRM,KAAK6B,SAAS,CAAErC,WAAW,IAlCTE,IACboC,MAHMpC,IAAI,iDAA8CA,GAGlDqC,CAAOrC,IACjBsC,KAAKC,GAAOA,EAAIC,QAChBF,KAAKE,GAAQA,EAAKC,MAiCnBC,CAAc1C,GAAMsC,KAAKL,IACvB3B,KAAK6B,SAAS,CACZF,SAAU,IAAI3B,KAAK0B,MAAMC,YAAaA,GACtCnC,WAAW,EACXE,KAAMA,MAKZ8B,iBAAiB9B,GACfM,KAAK4B,UAAUlC,GAGjBU,SAAU,MAAD,EAC+BJ,KAAK0B,MAAnChC,EADD,EACCA,KAAMF,EADP,EACOA,UAAWmC,EADlB,EACkBA,SACzB,OACE,6BACE,iEACA,kBAAC,EAAD,CACEjC,KAAMA,EACND,UAAW,EACXD,UAAWA,EACXc,OAAQ,yBAAKS,MAAO,CAAEsB,UAAW,WAAzB,cACR9B,UACE,yBAAKQ,MAAO,CAAEsB,UAAW,WAAzB,oBAEFlC,aAAcH,KAAKwB,kBAElBG,EAASW,IAAI5B,GACZ,kBAACD,EAAD,CAAS8B,IAAK7B,EAAQC,GAAID,QAASA,QAQhCU,QCzEfoB,IAASpC,OAAO,kBAAC,EAAD,MAASL,SAAS0C,eAAe,U","file":"static/js/main.09018050.chunk.js","sourcesContent":["import * as React from \"react\";\n\nconst HEIGHT_FIX = 5;\n\ninterface IProps {\n  page: number;\n  totalPage: number;\n  isLoading: boolean;\n  loader: string | JSX.Element;\n  noMoreTip: string | JSX.Element;\n\n  onPageChange: (page: number) => void;\n}\n\nexport default class InfiniteScrollPager extends React.Component<IProps> {\n  private wrapperRef = React.createRef<HTMLDivElement>();\n\n  componentDidMount(): void {\n    document.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  handleScroll = (): void => {\n    const { isLoading, totalPage, page } = this.props;\n    const wrapper = this.wrapperRef.current;\n\n    if (!wrapper || isLoading || totalPage <= page) return;\n\n    const wrapperRect = wrapper.getBoundingClientRect();\n    if (wrapperRect.bottom < window.innerHeight + HEIGHT_FIX) {\n      this.loadNextPage();\n    }\n  };\n\n  loadNextPage(): void {\n    const { page, onPageChange } = this.props;\n\n    onPageChange(page + 1);\n  }\n\n  render(): JSX.Element {\n    const {\n      children,\n      isLoading,\n      loader,\n      totalPage,\n      page,\n      noMoreTip\n    } = this.props;\n\n    return (\n      <div ref={this.wrapperRef}>\n        {children}\n        {isLoading && loader}\n        {totalPage <= page && noMoreTip}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport InfiniteScrollPager from \"react-infinite-scroll-pager\";\n\nconst getUrl = page => `https://cnodejs.org/api/v1/topics?page=${page}`;\n\nconst fetchArticles = page => {\n  return fetch(getUrl(page))\n    .then(res => res.json())\n    .then(json => json.data);\n};\n\nconst Article = ({ article: { id, title, create_at: createdAt } }) => {\n  return (\n    <div style={{ padding: \"20px\", borderBottom: \"1px solid #eee\" }}>\n      <h3>{title}</h3>\n      <address>{new Date(createdAt).toLocaleString()}</address>\n    </div>\n  );\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageChange = this.handlePageChange.bind(this);\n\n    this.state = {\n      page: 1,\n      isLoading: false,\n      articles: []\n    };\n  }\n\n  componentDidMount() {\n    const { page } = this.state;\n    this.fetchData(page);\n  }\n\n  fetchData(page) {\n    this.setState({ isLoading: true });\n\n    fetchArticles(page).then(articles => {\n      this.setState({\n        articles: [...this.state.articles, ...articles],\n        isLoading: false,\n        page: page\n      });\n    });\n  }\n\n  handlePageChange(page) {\n    this.fetchData(page);\n  }\n\n  render() {\n    const { page, isLoading, articles } = this.state;\n    return (\n      <div>\n        <h1>React infiniteScrollPager Example</h1>\n        <InfiniteScrollPager\n          page={page}\n          totalPage={5}\n          isLoading={isLoading}\n          loader={<div style={{ textAlign: \"center\" }}>loading...</div>}\n          noMoreTip={\n            <div style={{ textAlign: \"center\" }}>No more articles</div>\n          }\n          onPageChange={this.handlePageChange}\n        >\n          {articles.map(article => (\n            <Article key={article.id} article={article} />\n          ))}\n        </InfiniteScrollPager>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}